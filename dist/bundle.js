(()=>{"use strict";var e={d:(s,t)=>{for(var i in t)e.o(t,i)&&!e.o(s,i)&&Object.defineProperty(s,i,{enumerable:!0,get:t[i]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s)};function s(e){!function(e){console.log(`ステージ ${e} のデータを読み込み中...`)}(e),document.getElementById("stage-select").style.display="none",document.getElementById("game-container").style.display="block",function(e){console.log("ゲーム開始！"),k(e)}(e)}e.d({},{u:()=>k}),function(){const e=document.getElementById("game-container"),s=document.getElementById("stage-select");e&&(e.style.display="none"),s&&(s.style.display="block")}();const t=document.getElementById("stage1"),i=document.getElementById("stage2"),a=document.getElementById("stage3");t&&t.addEventListener("click",(()=>s(1))),i&&i.addEventListener("click",(()=>s(2))),a&&a.addEventListener("click",(()=>s(3)));const o=function(){const e=window.innerWidth,s=window.innerHeight,t=16/9;let i,a;return e/s>t?(a=s,i=a*t):(i=e,a=i/t),i=Math.max(320,i),a=Math.max(240,a),{width:i,height:a}}(),n={type:Phaser.AUTO,width:o.width,height:o.height,backgroundColor:"#87CEEB",parent:"game-container",scale:{mode:Phaser.Scale.RESIZE,autoCenter:Phaser.Scale.CENTER_BOTH,expandParent:!0,fullscreenTarget:"game-container"},physics:{default:"arcade",arcade:{gravity:{y:0},debug:!1}}};class l{constructor(e){this.scene=e,this.map=null,this.layers=[]}createMap(){this.map=this.scene.make.tilemap({key:"map"});try{const e=this.createTilesets();this.createLayers(e),this.placeObjects()}catch(e){console.error("Error creating tilesets/layers:",e),this.createFallbackMap()}}createTilesets(){console.log("=== createTilesets開始 ===");const e=[];console.log("this.map.tilesets:",this.map.tilesets),console.log("tilesets length:",this.map.tilesets.length);const s={"[A]Grass1_pipo":"[A]Grass1_pipo",backgraund:"pipo-map001_at-kusa",GK_A2_C_autotile:"GK_A2_C_autotile",Preview_RPGMakerVXAce:"Preview_RPGMakerVXAce",Preview:"Preview",GK_JC_A5_2:"GK_JC_A5_2",GK_JC_B_2:"GK_JC_B_2",tiles:"tiles",tileset:"tiles",Tilemap:"Tilemap"},t=[{keyword:"GK_A2_C",texture:"GK_A2_C_autotile"},{keyword:"Preview_RPGMaker",texture:"Preview_RPGMakerVXAce"},{keyword:"GK_JC_A5",texture:"GK_JC_A5_2"},{keyword:"GK_JC_B",texture:"GK_JC_B_2"},{keyword:"Tilemap",texture:"Tilemap"}];return this.map.tilesets.forEach((i=>{let a=null;const o=i.name,n=i.tileWidth||32,l=i.tileHeight||32;let r=s[o];if(!r){const e=t.find((e=>o.includes(e.keyword)));r=e?e.texture:"tiles",e||console.warn(`Unknown tileset: ${o}, using tiles.png as fallback`)}a=this.map.addTilesetImage(o,r,n,l),a&&e.push(a)})),console.log("Final availableTilesets:",e),console.log("availableTilesets length:",e.length),e}createLayers(e){console.log("=== createLayers開始 ==="),console.log("availableTilesets:",e),console.log("this.map.layers:",this.map.layers),console.log("layers length:",this.map.layers.length),this.map.layers.forEach(((s,t)=>{console.log(`Processing layer ${t}:`,s.name);const i=this.map.createLayer(s.name,e,0,0);if(console.log("Created layer result:",i),i){this.layers.push(i);const e=100*t-1e3;i.setDepth(e),i.setCollisionByProperty({collides:!0}),console.log(`Layer created: ${s.name}, depth: ${e}`,i)}else console.error(`Failed to create layer: ${s.name}`)}))}placeObjects(){console.log("=== placeObjects開始 ==="),console.log("map.objects:",this.map.objects),this.objectGroup=this.scene.physics.add.staticGroup(),this.map.objects.forEach((e=>{console.log(`Layer: ${e.name}, objects: ${e.objects.length}`),e.objects.forEach(((e,s)=>{const t=e.name;if(console.log(`  Object ${s}: ${e.name} → ${t} at (${e.x}, ${e.y})`),console.log("チェック: this.scene.textures.exists('"+t+"') = ",this.scene.textures.exists(t)),console.log("obj.properties:",e.properties),console.log("obj.properties.collides:",e.properties?.collides),console.log("条件チェック結果:",e.properties&&e.properties.collides),console.log("obj.type:",e.type),console.log("=== objType判定詳細デバッグ ==="),console.log("obj.type:",e.type),console.log("typeof obj.type:",typeof e.type),console.log('obj.type === "npc":',"npc"===e.type),console.log('obj.type && obj.type.trim() !== "":',e.type&&""!==e.type.trim()),this.scene.textures.exists(t)){console.log(`✅ Image ${t} exists`);const s=this.scene.add.sprite(e.x,e.y,t,1);s.setOrigin(0,0),s.setScale(1);let i=!1;if(e.properties&&Array.isArray(e.properties)){const s=e.properties.find((e=>"collides"===e.name));i=s&&!0===s.value}if(i){console.log("this.scene.collisionManager:",this.scene.collisionManager);let i=e.type||"wall";console.log(`Final objType for ${t}: ${i}`),this.scene.collisionManager.addObjectToCollision(s,{type:i,width:e.width||32,height:e.height||32,name:e.name}),console.log(`Added collision to ${t} as ${i}`)}else console.log(`No collision for ${t}`)}else console.log("❌ Image "+t+" NOT found!")}))}))}createFallbackMap(){console.log("Trying fallback with single tileset...");try{const e=this.map.addTilesetImage("tileset","tiles",32,32),s=this.map.createLayer(0,e,0,0);s&&(this.layers.push(s),s.setDepth(-1),s.setCollisionByProperty({collides:!0}),console.log("Fallback layer created"))}catch(e){console.error("Fallback also failed:",e)}}getObjectGroup(){return this.objectGroup}}class r{constructor(e){this.scene=e,this.player=null,this.cursors=null,this.wasd=null,this.speed=300}createPlayer(e,s){this.player=this.scene.physics.add.sprite(e,s,null),this.player.setDisplaySize(30,30),this.player.setTint(16711680),this.player.setCollideWorldBounds(!0),this.player.setBounce(.2)}setInputKeys(e,s){this.cursors=e,this.wasd=s}update(){this.player&&this.cursors&&this.wasd&&(this.cursors.left.isDown||this.wasd.A.isDown?this.player.setVelocityX(-this.speed):this.cursors.right.isDown||this.wasd.D.isDown?this.player.setVelocityX(this.speed):this.player.setVelocityX(0),this.cursors.up.isDown||this.wasd.W.isDown?this.player.setVelocityY(-this.speed):this.cursors.down.isDown||this.wasd.S.isDown?this.player.setVelocityY(this.speed):this.player.setVelocityY(0))}setVelocity(e,s){this.player&&this.player.setVelocity(e,s)}getPosition(){return this.player?{x:this.player.x,y:this.player.y}:{x:0,y:0}}}class c{constructor(e,s){this.scene=e,this.player=s,this.touchStartX=0,this.touchStartY=0,this.isPointerDown=!1,this.targetX=0,this.targetY=0,this.setupTouchControls()}setupTouchControls(){this.scene.input.on("pointerdown",(e=>{console.log("TouchControl: pointerdown detected"),console.log("Dialog active:",this.scene.dialogSystem&&this.scene.dialogSystem.isDialogActive()),this.scene.dialogSystem&&this.scene.dialogSystem.isDialogActive()?console.log("TouchControl: Skipping movement because dialog is active"):(console.log("TouchControl: Processing click for movement"),this.touchStartX=e.x,this.touchStartY=e.y,this.isPointerDown=!0,this.targetX=e.worldX,this.targetY=e.worldY,this.scene.time.delayedCall(100,(()=>{this.isPointerDown&&this.startContinuousMovement()})))})),this.scene.input.on("pointermove",(e=>{this.scene.dialogSystem&&this.scene.dialogSystem.isDialogActive()||this.isPointerDown&&(this.targetX=e.worldX,this.targetY=e.worldY)})),this.scene.input.on("pointerup",(e=>{if(this.scene.dialogSystem&&this.scene.dialogSystem.isDialogActive())return;this.isPointerDown=!1;const s=e.x-this.touchStartX,t=e.y-this.touchStartY;(Math.abs(s)>50||Math.abs(t)>50)&&this.handleSwipe(s,t)}))}handleSwipe(e,s){if(this.scene.dialogSystem&&this.scene.dialogSystem.isDialogActive())return;let t=0,i=0;Math.abs(e)>Math.abs(s)?t=e>0?600:-600:i=s>0?600:-600,this.player.setVelocity(t,i),this.scene.time.delayedCall(300,(()=>{this.player.setVelocity(0,0)}))}startContinuousMovement(){if(this.scene.dialogSystem&&this.scene.dialogSystem.isDialogActive())return void this.player.setVelocity(0,0);if(!this.isPointerDown)return;const e=this.player.x,s=this.player.y,t=this.targetX-e,i=this.targetY-s,a=Math.sqrt(t*t+i*i);if(a>10){const e=300;this.player.setVelocity(t/a*e,i/a*e)}else this.player.setVelocity(0,0);this.scene.time.delayedCall(16,(()=>{this.isPointerDown&&this.startContinuousMovement()}))}}class h{constructor(){this.playerPosText=null}createUI(e){e.add.text(400,50,"★★★テスト中★★★bbbbb",{fontSize:"24px",fill:"#000000",fontWeight:"bold"}).setOrigin(.5),e.add.text(400,550,"矢印キーまたはWASDで移動！マップ上を歩いてみよう！",{fontSize:"16px",fill:"#000000"}).setOrigin(.5),this.playerPosText=e.add.text(10,10,"",{fontSize:"16px",fill:"#000000",backgroundColor:"#ffffff",padding:{x:5,y:5}})}updatePlayerPosition(e){this.playerPosText&&this.playerPosText.setText(`ひろかず位置: X=${Math.round(e.x)}, Y=${Math.round(e.y)}`)}}class p{setupCamera(e,s,t){const i=s.widthInPixels,a=s.heightInPixels;e.cameras.main.setBounds(0,0,i,a),e.cameras.main.startFollow(t),e.physics.world.setBounds(0,0,i,a)}}class g{setupKeyboard(e,s){const t=e.input.keyboard.createCursorKeys(),i=e.input.keyboard.addKeys("W,S,A,D");s.setInputKeys(t,i)}}class d{constructor(e){this.scene=e,this.dialogSystem=null,this.collisionGroups={walls:null,npcs:null,items:null,enemies:null}}setDialogSystem(e){this.dialogSystem=e}setupCollisionGroups(){this.collisionGroups.walls=this.scene.physics.add.staticGroup(),this.collisionGroups.npcs=this.scene.physics.add.staticGroup(),this.collisionGroups.items=this.scene.physics.add.group(),this.collisionGroups.enemies=this.scene.physics.add.group()}addObjectToCollision(e,s){const t=s.type||"wall";this.scene.physics.add.existing(e,"item"!==t&&"enemy"!==t);const i=s.width||32,a=s.height||32;switch(e.body.setSize(i,a),t){case"npc":this.collisionGroups.npcs.add(e),e.setInteractive(),e.on("pointerdown",(()=>{this.startConversation(s.name)}));break;case"item":this.collisionGroups.items.add(e),e.setData("itemId",s.name);break;case"enemy":this.collisionGroups.enemies.add(e),e.setData("enemyId",s.name);break;default:this.collisionGroups.walls.add(e)}}setupPlayerCollisions(e){this.scene.physics.add.collider(e,this.collisionGroups.walls),this.scene.physics.add.collider(e,this.collisionGroups.npcs),this.scene.physics.add.overlap(e,this.collisionGroups.items,this.collectItem,null,this.scene),this.scene.physics.add.overlap(e,this.collisionGroups.enemies,this.encounterEnemy,null,this.scene)}collectItem(e,s){const t=s.getData("itemId");console.log(`Collected ${t}`),s.destroy()}startConversation(e){console.log(`Starting conversation with ${e}`),this.dialogSystem?this.dialogSystem.startDialog(e):console.error("DialogSystem is not initialized in CollisionManager")}isDialogActive(){return!!this.dialogSystem&&this.dialogSystem.isDialogActive()}getDialogSystem(){return this.dialogSystem}setupAllCollisions(e,s){this.setupTileCollisions(e,s),this.setupPlayerCollisions(e)}setupTileCollisions(e,s){s&&s.layers&&s.layers.forEach((s=>{s&&this.scene.physics.add.collider(e,s)}))}}class u{constructor(e){this.scene=e}setupObjectBehavior(e,s){switch(s.type){case"npc":this.setupNpcBehavior(e,s);break;case"item":this.setupItemBehavior(e,s);break;case"enemy":this.setupEnemyBehavior(e,s)}}setupNpcBehavior(e,s){switch(s.name){case"kuccoro1":this.setupKuccoro1Animation(e);break;case"kuccoro2":this.setupKuccoro2Animation(e);break;case"kuccoro3":this.setupKuccoro3Animation(e);break;case"hanni":this.setupHanniAnimation(e)}}setupItemBehavior(e,s){this.scene.tweens.add({targets:e,alpha:.7,duration:1e3,yoyo:!0,repeat:-1})}setupEnemyBehavior(e,s){switch(s.name){case"enemy1":this.setupEnemy1Animation(e);break;case"enemy2":this.setupEnemy2Animation(e);break;default:this.setupDefaultEnemyAnimation(e)}}setupKuccoro1Animation(e){this.scene.tweens.add({targets:e,y:e.y+5,duration:1500,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"})}setupKuccoro2Animation(e){this.scene.tweens.add({targets:e,x:e.x+20,duration:2e3,yoyo:!0,repeat:-1,ease:"Power1"})}setupKuccoro3Animation(e){this.scene.tweens.add({targets:e,rotation:2*Math.PI,duration:4e3,repeat:-1,ease:"Linear"})}setupHanniAnimation(e){this.scene.tweens.add({targets:e,scale:1.1,duration:1e3,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"})}setupEnemy1Animation(e){this.scene.tweens.add({targets:e,x:e.x+50,duration:2e3,yoyo:!0,repeat:-1,ease:"Power2"})}setupEnemy2Animation(e){this.scene.tweens.add({targets:e,y:e.y+30,duration:1500,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"})}setupDefaultEnemyAnimation(e){this.scene.tweens.add({targets:e,x:e.x+25,duration:3e3,yoyo:!0,repeat:-1,ease:"Linear"})}startConversation(e){console.log(`Starting conversation with ${e}`),this.scene.collisionManager&&this.scene.collisionManager.startConversation(e)}}class m{constructor(e,s){console.log("NEW DialogSystem created for scene:",e.scene.key),console.log("Stage data keys:",Object.keys(s)),this.scene=e,this.isActive=!1,this.dialogContainer=null,this.dialogText=null,this.currentDialog=null,this.currentTextIndex=0,this.dialogs=s,this.setupUI(),this.setupInput()}setupUI(){this.dialogContainer&&this.dialogContainer.destroy();const e=this.scene.cameras.main,s=e.width,t=e.height;console.log("=== Dialog UI Setup Debug ==="),console.log("gameWidth:",s,"gameHeight:",t);const i=t-120-20-20;console.log("dialogY:",i),this.dialogContainer=this.scene.add.container(0,0),this.dialogContainer.setDepth(1e4),this.dialogContainer.setVisible(!1);const a=this.scene.add.rectangle(s/2,i+60,s-20,120,0,.8);a.setStrokeStyle(2,16777215),this.dialogText=this.scene.add.text(30,i+60,"",{fontSize:"18px",fill:"#ffffff",metrics:{ascent:15,descent:5,fontSize:18},wordWrap:{width:s-60}}),this.dialogText.setOrigin(0,.5),this.continueIndicator=this.scene.add.text(s-20,i+60-20,"タップで続行",{fontSize:"12px",fill:"#ffff00",align:"center"}),this.continueIndicator.setOrigin(1,1),this.scene.tweens.add({targets:this.continueIndicator,alpha:.3,duration:800,yoyo:!0,repeat:-1}),this.dialogContainer.add([a,this.dialogText,this.continueIndicator]),a.removeAllListeners(),a.setInteractive({hitArea:new Phaser.Geom.Rectangle(-s/2,-80,s,160),hitAreaCallback:Phaser.Geom.Rectangle.Contains,useHandCursor:!1}),a.on("pointerdown",((e,s,t,i)=>{console.log("=== Dialog Background Clicked ==="),console.log("NPC ID:",this.currentDialog?"Active":"None"),console.log("isActive:",this.isActive),console.log("Click position:",{x:e.x,y:e.y}),console.log("Local position:",{x:s,y:t}),i&&i.stopPropagation&&(i.stopPropagation(),console.log("Event propagation stopped")),this.isActive?(console.log("Calling nextDialog()"),this.nextDialog()):console.log("Dialog not active, ignoring click")})),this.dialogContainer.setInteractive({hitArea:new Phaser.Geom.Rectangle(0,0,s,t),hitAreaCallback:Phaser.Geom.Rectangle.Contains}),this.dialogContainer.on("pointerdown",((e,s,t,i)=>{console.log("=== Dialog Container Clicked ==="),i&&i.stopPropagation&&i.stopPropagation(),this.isActive&&(console.log("Container click -> calling nextDialog()"),this.nextDialog())})),this.dialogContainer.setScrollFactor(0),console.log("Dialog container position:",this.dialogContainer.x,this.dialogContainer.y),console.log("Background rectangle bounds:",a.getBounds()),this.scene.scale.off("resize",this.handleResize,this),this.scene.scale.on("resize",this.handleResize,this)}handleResize(e){if(!this.dialogContainer)return;const s=e.width,t=e.height;console.log("Dialog resize:",s,t),this.setupUI()}setupInput(){this.scene.input.keyboard.on("keydown-SPACE",(()=>{this.isActive&&this.nextDialog()}))}startDialog(e){console.log("=== NEW CONVERSATION START ==="),console.log("Scene:",this.scene.scene.key),console.log("NPC:",e),console.log("Available dialogs:",Object.keys(this.dialogs)),console.log("DialogSystem.startDialog called with:",e),console.log("dialogs:",this.dialogs),console.log("dialog exists:",!!this.dialogs[e]),this.dialogs[e]?(this.currentDialog=this.dialogs[e],this.currentTextIndex=0,this.isActive=!0,console.log("Force reset currentTextIndex to 0"),this.currentTextIndex=0,this.dialogContainer.setVisible(!0),this.showMessage(),console.log("Dialog started for:",e)):console.error("No dialog found for:",e)}showMessage(){if(console.log("currentTextIndex:",this.currentTextIndex),console.log("message:",this.currentDialog.messages[this.currentTextIndex]),this.currentTextIndex>=this.currentDialog.messages.length)return void this.endDialog();const e=this.currentDialog.messages[this.currentTextIndex];this.dialogText.setText(e),console.log("Showing message:",e)}nextDialog(){console.log("nextDialog() called - before increment:",this.currentTextIndex),this.currentTextIndex++,console.log("nextDialog() called - after increment:",this.currentTextIndex),this.showMessage()}endDialog(){this.isActive=!1,this.dialogContainer.setVisible(!1)}isDialogActive(){return this.isActive}}const y={kuccoro1:{name:"くっころ1",messages:["クンニちわ！","今日はいい天気ですね","また会いましょう！"]},kuccoro2:{name:"くっころ2",messages:["くっ、、、殺せ！","イクイクイクイクイクっ、おっちんぽーーーーー！"]},kuccoro3:{name:"エッチな女騎士",messages:["くっ、、、ころせ！","イグイグイグぅぅ！"]},hanni:{name:"はんに",messages:["ようこそ、Stage1へ！","このエリアには色々な仲間がいますよ","みんなと話してみてくださいね"]},enemy1:{name:"敵1",messages:["グルル...","通さないぞ！"]},enemy2:{name:"敵2",messages:["ここから先は危険だ","引き返すんだ！"]}};class C extends Phaser.Scene{constructor(){super({key:"Stage1Scene"}),this.mapManager=null,this.playerController=null,this.touchControlManager=null,this.uiManager=null,this.cameraManager=null,this.inputManager=null,this.collisionManager=null,this.behaviorManager=null,this.dialogSystem=null}preload(){this.load.tilemapTiledJSON("map","assets/maps/stage1.tmj"),this.load.image("[A]Grass1_pipo","assets/maps/tilesets/stage1/[A]Grass1_pipo.png"),this.load.image("Tilemap","assets/maps/tilesets/stage1/Tilemap.png");const e={frameWidth:32,frameHeight:32};this.load.spritesheet("ojyama1","assets/characters/enemies/pipo-charachip005a.png",e),this.load.spritesheet("hanni","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("kuccoro","assets/characters/npcs/pipo-charachip022e.png",e),this.load.spritesheet("kuccoro1","assets/characters/npcs/pipo-charachip022a.png",e),this.load.spritesheet("kuccoro2","assets/characters/npcs/pipo-charachip022e.png",e),this.load.spritesheet("kuccoro3","assets/characters/npcs/pipo-charachip026.png",e),this.load.spritesheet("kuccoro4","assets/characters/npcs/pipo-charachip024d.png",e),this.load.spritesheet("enemy1","assets/characters/enemies/pipo-charachip005a.png",e),this.load.spritesheet("enemy2","assets/characters/enemies/pipo-charachip005a.png",e),this.load.spritesheet("friend1","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("friend2","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("kuccoro","assets/characters/npcs/pipo-charachip022a.png",e),this.load.on("fileerror",(e=>{console.error(`Failed to load file: ${e.key} from ${e.url}`)})),this.load.on("complete",(()=>{console.log("All assets loaded successfully")}))}create(){try{console.log("Before creating CollisionManager"),this.collisionManager=new d(this),console.log("CollisionManager created:",this.collisionManager),this.collisionManager.setupCollisionGroups(),console.log("Creating DialogSystem for Stage1"),this.dialogSystem=new m(this,y),this.collisionManager.setDialogSystem(this.dialogSystem),console.log("Creating BehaviorManager_Stage1"),this.behaviorManager=new u(this),this.mapManager=new l(this),console.log("MapManager created, calling createMap()"),this.mapManager.createMap(),console.log("MapManager: createMap completed"),console.log("Creating PlayerController"),this.playerController=new r(this),this.playerController.createPlayer(100,100),console.log("Creating TouchControlManager"),this.touchControlManager=new c(this,this.playerController.player),console.log("Creating UIManager"),this.uiManager=new h,this.uiManager.createUI(this),console.log("Setting up CameraManager"),this.cameraManager=new p,this.cameraManager.setupCamera(this,this.mapManager.map,this.playerController.player),console.log("Setting up InputManager"),this.inputManager=new g,this.inputManager.setupKeyboard(this,this.playerController),console.log("Setting up all collisions"),this.collisionManager.setupAllCollisions(this.playerController.player,this.mapManager),console.log("=== Scene creation completed ===")}catch(e){console.error("Error during scene creation:",e),console.error("Stack trace:",e.stack)}}update(){try{if(this.dialogSystem&&this.dialogSystem.isDialogActive())return void this.playerController.player.setVelocity(0,0);this.playerController&&this.playerController.update(),this.uiManager&&this.playerController&&this.uiManager.updatePlayerPosition(this.playerController.player)}catch(e){console.error("Error during update:",e)}}resize(e){const s=e.width,t=e.height;this.cameras.resize(s,t),console.log(`Game resized to: ${s}x${t}`)}}class w{constructor(e){this.scene=e}setupObjectBehavior(e,s){switch(s.type){case"npc":this.setupNpcBehavior(e,s);break;case"item":this.setupItemBehavior(e,s);break;case"enemy":this.setupEnemyBehavior(e,s)}}setupNpcBehavior(e,s){switch(s.name){case"friend2_4":this.setupFriend2Animation(e);break;case"shopkeeper":this.setupShopkeeperAnimation(e);break;case"guard":this.setupGuardAnimation(e);break;case"merchant":this.setupMerchantAnimation(e)}}setupItemBehavior(e,s){this.scene.tweens.add({targets:e,alpha:.5,scale:1.2,duration:800,yoyo:!0,repeat:-1,ease:"Power2"})}setupEnemyBehavior(e,s){switch(s.name){case"boss_stage2":this.setupBossAnimation(e);break;case"strong_enemy":this.setupStrongEnemyAnimation(e);break;default:this.setupDefaultEnemyAnimation(e)}}setupFriend2Animation(e){this.scene.tweens.add({targets:e,alpha:.8,duration:2e3,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"})}setupShopkeeperAnimation(e){this.scene.tweens.add({targets:e,rotation:.1,duration:1e3,yoyo:!0,repeat:-1,ease:"Power1"})}setupGuardAnimation(e){this.scene.tweens.add({targets:e,x:e.x+40,duration:3e3,yoyo:!0,repeat:-1,ease:"Linear"})}setupMerchantAnimation(e){this.scene.tweens.add({targets:e,y:e.y+8,duration:1200,yoyo:!0,repeat:-1,ease:"Sine.easeInOut"})}setupBossAnimation(e){this.scene.tweens.add({targets:e,scale:1.2,rotation:.2,duration:1500,yoyo:!0,repeat:-1,ease:"Power2"})}setupStrongEnemyAnimation(e){this.scene.tweens.add({targets:e,x:e.x+60,y:e.y+20,duration:1e3,yoyo:!0,repeat:-1,ease:"Back.easeInOut"})}setupDefaultEnemyAnimation(e){this.scene.tweens.add({targets:e,x:e.x+35,rotation:Math.PI/8,duration:2e3,yoyo:!0,repeat:-1,ease:"Power2"})}startConversation(e){console.log(`Starting conversation with ${e}`),this.scene.collisionManager&&this.scene.collisionManager.startConversation(e)}}const M={friend2_4:{name:"ひろかず",messages:["もこうにドンキあるから","そこで、５０万かたしてもらって","もいいい？"]},friend2_5:{name:"くず",messages:["はらめおらぁ"]},guard:{name:"ポルノさん",messages:["できたら愛してくだーさい","僕の肩で羽を休めておくれー"]},kuccoro:{name:"商人",messages:["やめて！","ラーの翼神竜の特殊能力で、ギルフォード・ザ・ライトニングを焼き払われたら、","闇のゲームでモンスターと繋がってる城之内の精神まで燃え尽きちゃう！","お願い、死なないで城之内！","あんたが今ここで倒れたら、舞さんや遊戯との約束はどうなっちゃうの？","ライフはまだ残ってる。ここを耐えれば、マリクに勝てるんだから！","次回「城之内死す」デュエルスタンバイ！"]},kuccoro1:{name:"くっころ",messages:["ここまで辿り着くとはな","しかし、ここが君の限界だ！","かかってこい！","ここが貴様の墓場となろう"]},kuccoro2:{name:"エッチな女騎士",messages:["くっ、、、ころせ！","イグイグイグぅぅ！"]},kuccoro4:{name:"２コマ即落ち女騎士",messages:["くっ、、、殺せ！","イクイクイクイクイクっ、おっちんぽーーーーー！"]}};class f extends Phaser.Scene{constructor(){super({key:"Stage2Scene"}),this.mapManager=null,this.playerController=null,this.touchControlManager=null,this.uiManager=null,this.cameraManager=null,this.inputManager=null,this.collisionManager=null,this.dialogSystem=null}preload(){this.load.tilemapTiledJSON("map","assets/maps/test_map5.tmj"),this.load.image("GK_A2_C_autotile","assets/maps/tilesets/stage2/GK_A2_JC_autotile.png"),this.load.image("Preview_RPGMakerVXAce","assets/maps/tilesets/stage2/Preview_RPGMakerVXAce.png"),this.load.image("Preview","assets/maps/tilesets/stage2/Preview.png"),this.load.image("GK_JC_A5_2","assets/maps/tilesets/stage2/GK_JC_A5_2.png"),this.load.image("GK_JC_B_2","assets/maps/tilesets/stage2/GK_JC_B_2.png"),this.load.image("tiles","assets/maps/tilesets/stage2/tiles.png"),this.load.image("Tilemap","assets/maps/tilesets/stage2/Tilemap.png"),this.load.image("pipo-map001_at-kusa","assets/maps/tilesets/stage2/pipo-map001_at-kusa.png");const e={frameWidth:32,frameHeight:32};this.load.spritesheet("enemy1","assets/characters/enemies/pipo-charachip005a.png",e),this.load.spritesheet("friend2_6","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("friend2_5","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("friend2_4","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("friend2_3","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("friend2_2","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("friend2_1","assets/characters/npcs/pipo-charachip007a.png",e),this.load.spritesheet("kuccoro1","assets/characters/npcs/pipo-charachip022a.png",e),this.load.spritesheet("kuccoro","assets/characters/npcs/pipo-charachip022e.png",e),this.load.spritesheet("kuccoro2","assets/characters/npcs/pipo-charachip024d.png",e),this.load.on("complete",(()=>{console.log("All assets loaded successfully")}))}create(){console.log("Before creating CollisionManager"),this.collisionManager=new d(this),console.log("CollisionManager created:",this.collisionManager),this.collisionManager.setupCollisionGroups(),console.log("Stage2: Creating DialogSystem for Stage2"),this.dialogSystem=new m(this,M),this.collisionManager.setDialogSystem(this.dialogSystem),console.log("Stage2: Creating BehaviorManager_Stage2"),this.behaviorManager=new w(this),this.mapManager=new l(this),console.log("MapManager: placeObjectsを呼ぶ前"),this.mapManager.createMap(),console.log("MapManager: placeObjectsを呼んだ後"),this.playerController=new r(this),this.playerController.createPlayer(100,100),this.touchControlManager=new c(this,this.playerController.player),this.uiManager=new h,this.uiManager.createUI(this),this.cameraManager=new p,this.cameraManager.setupCamera(this,this.mapManager.map,this.playerController.player),this.inputManager=new g,this.inputManager.setupKeyboard(this,this.playerController),console.log("setupCollisionGroups completed"),this.collisionManager.setupAllCollisions(this.playerController.player,this.mapManager),console.log("=== 読み込まれた画像 ==="),console.log("friend1 exists:",this.textures.exists("friend1")),console.log("friend2 exists:",this.textures.exists("friend2")),console.log("kuccoro exists:",this.textures.exists("kuccoro"))}update(){this.dialogSystem&&this.dialogSystem.isDialogActive()?this.playerController.player.setVelocity(0,0):(this.playerController&&this.playerController.update(),this.uiManager&&this.playerController&&this.uiManager.updatePlayerPosition(this.playerController.player))}resize(e){const s=e.width,t=e.height;this.cameras.resize(s,t),console.log(`Game resized to: ${s}x${t}`)}}class x extends Phaser.Scene{constructor(){super({key:"Stage3Scene"}),this.mapManager=null,this.playerController=null,this.touchControlManager=null,this.uiManager=null,this.cameraManager=null,this.inputManager=null,this.collisionManager=null}preload(){this.load.tilemapTiledJSON("map","assets/test_map5.tmj"),this.load.image("GK_A2_C_autotile","assets/GK_A2_JC_autotile.png"),this.load.image("Preview_RPGMakerVXAce","assets/Preview_RPGMakerVXAce.png"),this.load.image("Preview","assets/Preview.png"),this.load.image("GK_JC_A5_2","assets/GK_JC_A5_2.png"),this.load.image("GK_JC_B_2","assets/GK_JC_B_2.png"),this.load.image("tiles","assets/tiles.png"),this.load.image("Tilemap","assets/Tilemap.png"),this.load.image("pipo-map001_at-kusa","assets/pipo-map001_at-kusa.png");const e={frameWidth:32,frameHeight:32};this.load.spritesheet("enemy1","assets/pipo-charachip005a.png",e),this.load.spritesheet("friend2_6","assets/pipo-charachip007a.png",e),this.load.spritesheet("friend2_5","assets/pipo-charachip007a.png",e),this.load.spritesheet("friend2_4","assets/pipo-charachip007a.png",e),this.load.spritesheet("friend2_3","assets/pipo-charachip007a.png",e),this.load.spritesheet("friend2_2","assets/pipo-charachip007a.png",e),this.load.spritesheet("friend2_1","assets/pipo-charachip007a.png",e),this.load.spritesheet("kuccoro1","assets/pipo-charachip022a.png",e),this.load.spritesheet("kuccoro","assets/pipo-charachip022e.png",e),this.load.spritesheet("kuccoro2","assets/pipo-charachip024d.png",e),this.load.on("complete",(()=>{console.log("All assets loaded successfully")}))}create(){console.log("Before creating CollisionManager"),this.collisionManager=new d(this),console.log("CollisionManager created:",this.collisionManager),this.collisionManager.setupCollisionGroups(),this.mapManager=new l(this),console.log("MapManager: placeObjectsを呼ぶ前"),this.mapManager.createMap(),console.log("MapManager: placeObjectsを呼んだ後"),this.playerController=new r(this),this.playerController.createPlayer(100,100),this.touchControlManager=new c(this,this.playerController.player),this.uiManager=new h,this.uiManager.createUI(this),this.cameraManager=new p,this.cameraManager.setupCamera(this,this.mapManager.map,this.playerController.player),this.inputManager=new g,this.inputManager.setupKeyboard(this,this.playerController),console.log("setupCollisionGroups completed"),this.collisionManager.setupAllCollisions(this.playerController.player,this.mapManager),console.log("=== 読み込まれた画像 ==="),console.log("friend1 exists:",this.textures.exists("friend1")),console.log("friend2 exists:",this.textures.exists("friend2")),console.log("kuccoro exists:",this.textures.exists("kuccoro"))}update(){this.playerController.update(),this.uiManager&&this.uiManager.updatePlayerPosition(this.playerController.player)}resize(e){const s=e.width,t=e.height;this.cameras.resize(s,t),console.log(`Game resized to: ${s}x${t}`)}}function k(e){let s;switch(e){case 1:default:s=C;break;case 2:s=f;break;case 3:s=x}const t={...n,scene:s};new Phaser.Game(t)}window.addEventListener("orientationchange",(()=>{setTimeout((()=>{window.location.reload()}),100)}))})();